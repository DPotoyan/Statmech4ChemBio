Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
import numpy as np

@njit
def run_umbrella_ising2d(N, T, J, B, M0, k_bias, n_steps, out_freq):
    spins = 2 * (np.random.rand(N, N) < 0.5) - 1
    E_t = compute_total_energy(spins, J, B)
    M_t = np.sum(spins)

    n_out = n_steps // out_freq
    E_out = np.empty(n_out)
    M_out = np.empty(n_out)

    k = 0
    for step in range(n_steps):
        i = np.random.randint(N)
        j = np.random.randint(N)
        S = spins[i, j]
        neighbors = spins[(i+1)%N, j] + spins[(i-1)%N, j] + spins[i, (j+1)%N] + spins[i, (j-1)%N]
        dE = 2 * S * (J * neighbors + B)
        
        M_new = M_t - 2 * S
        dU = 0.5 * k_bias * (M_new - M0)**2 - 0.5 * k_bias * (M_t - M0)**2
        d_total = dE + dU

        if d_total <= 0 or np.random.rand() < np.exp(-d_total / T):
            spins[i, j] = -S
            E_t += dE
            M_t = M_new

        if step % out_freq == 0:
            E_out[k] = E_t / N**2
            M_out[k] = M_t / N**2
            k += 1

    return E_out, M_out

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 4[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mplt[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mnumpy[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mnp[39;00m
[0;32m----> 4[0m [38;5;129m@njit[39m
[1;32m      5[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mrun_umbrella_ising2d[39m(N, T, J, B, M0, k_bias, n_steps, out_freq):
[1;32m      6[0m     spins [38;5;241m=[39m [38;5;241m2[39m [38;5;241m*[39m (np[38;5;241m.[39mrandom[38;5;241m.[39mrand(N, N) [38;5;241m<[39m [38;5;241m0.5[39m) [38;5;241m-[39m [38;5;241m1[39m
[1;32m      7[0m     E_t [38;5;241m=[39m compute_total_energy(spins, J, B)

[0;31mNameError[0m: name 'njit' is not defined

